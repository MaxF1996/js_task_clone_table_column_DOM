{"mappings":"CCqCA,AAjCA,SAA0B,CAAK,CAAE,CAAW,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAiB,EACvD,EAAe,EAAM,aAAa,CAAC,YAEnC,EAAwB,AADN,EAAa,KAAK,CAAC,EAAY,CACT,SAAS,CAAC,CAAA,GAElD,EAAiB,EAAM,aAAa,CAAC,YAErC,EAA0B,AADN,EAAe,KAAK,CAAC,EAAY,CACT,SAAS,CAAC,CAAA,GAE5D,EAAa,YAAY,CACvB,EACA,EAAa,QAAQ,CAAC,EAAe,EAGvC,EAAe,YAAY,CACzB,EACA,EAAe,QAAQ,CAAC,EAAe,EAIzC,IAAM,EAAgB,AADJ,EAAM,aAAa,CAAC,SACN,gBAAgB,CAAC,MAE5C,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAsB,CAAA,CAAA,OAAA,QAAA,CAAA,GAAtB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAqC,CAArC,IAAM,EAAN,EAAA,KAAA,CAEG,EAAwB,AADN,EAAa,KAAK,CAAC,EAAY,CACT,SAAS,CAAC,CAAA,GAExD,EAAa,YAAY,CACvB,EACA,EAAa,QAAQ,CAAC,EAAe,CAEzC,C,C,M,E,CARK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CASP,EAjCkB,SAAS,aAAa,CAAC,SAmCb,EAAG","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar pageTable = document.querySelector(\"table\");\nfunction cloneTableColumn(table, columnIndex) {\n    var insertingIndex = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;\n    var tableHeadRow = table.querySelector(\"thead tr\");\n    var tableHeadColumn = tableHeadRow.cells[columnIndex];\n    var clonedTableHeadColumn = tableHeadColumn.cloneNode(true);\n    var tableFooterRow = table.querySelector(\"tfoot tr\");\n    var tableFooterColumn = tableFooterRow.cells[columnIndex];\n    var clonedTableFooterColumn = tableFooterColumn.cloneNode(true);\n    tableHeadRow.insertBefore(clonedTableHeadColumn, tableHeadRow.children[insertingIndex]);\n    tableFooterRow.insertBefore(clonedTableFooterColumn, tableFooterRow.children[insertingIndex]);\n    var tableBody = table.querySelector(\"tbody\");\n    var tableBodyRows = tableBody.querySelectorAll(\"tr\");\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = tableBodyRows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var tableBodyRow = _step.value;\n            var tableBodyColumn = tableBodyRow.cells[columnIndex];\n            var clonedTableBodyColumn = tableBodyColumn.cloneNode(true);\n            tableBodyRow.insertBefore(clonedTableBodyColumn, tableBodyRow.children[insertingIndex]);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\ncloneTableColumn(pageTable, 1, 4);\n\n//# sourceMappingURL=index.a03bf062.js.map\n","'use strict';\n\nconst pageTable = document.querySelector('table');\n\nfunction cloneTableColumn(table, columnIndex, insertingIndex = 0) {\n  const tableHeadRow = table.querySelector('thead tr');\n  const tableHeadColumn = tableHeadRow.cells[columnIndex];\n  const clonedTableHeadColumn = tableHeadColumn.cloneNode(true);\n\n  const tableFooterRow = table.querySelector('tfoot tr');\n  const tableFooterColumn = tableFooterRow.cells[columnIndex];\n  const clonedTableFooterColumn = tableFooterColumn.cloneNode(true);\n\n  tableHeadRow.insertBefore(\n    clonedTableHeadColumn,\n    tableHeadRow.children[insertingIndex],\n  );\n\n  tableFooterRow.insertBefore(\n    clonedTableFooterColumn,\n    tableFooterRow.children[insertingIndex],\n  );\n\n  const tableBody = table.querySelector('tbody');\n  const tableBodyRows = tableBody.querySelectorAll('tr');\n\n  for (const tableBodyRow of tableBodyRows) {\n    const tableBodyColumn = tableBodyRow.cells[columnIndex];\n    const clonedTableBodyColumn = tableBodyColumn.cloneNode(true);\n\n    tableBodyRow.insertBefore(\n      clonedTableBodyColumn,\n      tableBodyRow.children[insertingIndex],\n    );\n  }\n}\n\ncloneTableColumn(pageTable, 1, 4);\n"],"names":["cloneTableColumn","table","columnIndex","insertingIndex","arguments","length","tableHeadRow","querySelector","clonedTableHeadColumn","tableHeadColumn","cells","cloneNode","tableFooterRow","clonedTableFooterColumn","tableFooterColumn","insertBefore","children","tableBodyRows","tableBody","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","tableBodyRow","value","clonedTableBodyColumn","tableBodyColumn","err","return","document"],"version":3,"file":"index.a03bf062.js.map"}